{

  "Description": "multi-az vpc template w/ 3 /28 public subnets, 3 /26 private subnets",

  "Parameters": {

    "CidrBlockPrefix": {
      "Description": "First three octets in the vpc cidr block range (x.y.z.0)",
      "Type": "String",
      "Default": "10.10.10"
    },
    "ZoneId1": {
      "Description": "Identifier for the first availability zone ('a' usually works)",
      "Type": "String",
      "Default": "a"
    },
    "ZoneId2": {
      "Description": "Identifier for the second availability zone ('b' usually works)",
      "Type": "String",
      "Default": "b"
    },
    "ZoneId3": {
      "Description": "Identifier for the third availability zone ('c' usually works)",
      "Type": "String",
      "Default": "c"
    }

  },



  "Resources": {

    "Vpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Fn::Join": [ ".", [ { "Ref": "CidrBlockPrefix" }, "0/24" ] ] },
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "InstanceTenancy": "default",
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "vpc" ] ] } } ]
      }
    },

    "InternetGateway": { 
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "igw" ] ] } } ]
      }
    },

    "InternetGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },

    "DhcpOptions": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "",
        "DomainNameServers": [ "AmazonProvidedDNS" ],
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "dhcp-options" ] ] } } ]
      }
    },

    "DhcpOptionsAssociation": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "DhcpOptionsId": { "Ref": "DhcpOptions" }
      }
    },



    "PublicSubnetRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "public-subnet-route-table" ] ] } } ]
      }
    },

    "PublicSubnetRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PublicSubnetRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },



    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Fn::Join": [ ".", [ { "Ref": "CidrBlockPrefix" }, "0/28" ] ] },
        "AvailabilityZone": { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, { "Ref": "ZoneId1" } ] ] },
        "MapPublicIpOnLaunch": "true",
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "public-subnet-a" ] ] } } ]
      }
    },

    "PublicSubnet1RouteTableAssoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnet1" },
        "RouteTableId": { "Ref": "PublicSubnetRouteTable" }
      }
    },

    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Fn::Join": [ ".", [ { "Ref": "CidrBlockPrefix" }, "16/28" ] ] },
        "AvailabilityZone": { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, { "Ref": "ZoneId2" } ] ] },
        "MapPublicIpOnLaunch": "true",
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "public-subnet-b" ] ] } } ]
      }
    },

    "PublicSubnet2RouteTableAssoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnet2" },
        "RouteTableId": { "Ref": "PublicSubnetRouteTable" }
      }
    },

    "PublicSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Fn::Join": [ ".", [ { "Ref": "CidrBlockPrefix" }, "32/28" ] ] },
        "AvailabilityZone": { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, { "Ref": "ZoneId3" } ] ] },
        "MapPublicIpOnLaunch": "true",
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "public-subnet-c" ] ] } } ]
      }
    },

    "PublicSubnet3RouteTableAssoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnet3" },
        "RouteTableId": { "Ref": "PublicSubnetRouteTable" }
      }
    },






    "NatGatewayAEip": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },

    "NatGatewayBEip": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },

    "NatGatewayCEip": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },

    "NatGatewayA": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": { "Fn::GetAtt": [ "NatGatewayAEip", "AllocationId" ] },
        "SubnetId": { "Ref": "PublicSubnet1"}
      }
    },

    "NatGatewayB": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": { "Fn::GetAtt": [ "NatGatewayBEip", "AllocationId" ] },
        "SubnetId": { "Ref": "PublicSubnet2"}
      }
    },

    "NatGatewayC": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": { "Fn::GetAtt": [ "NatGatewayCEip", "AllocationId" ] },
        "SubnetId": { "Ref": "PublicSubnet3"}
      }
    },

    "PrivateSubnet1RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "private-subnet-a-route-table" ] ] } } ]
      }
    },

    "PrivateSubnet1Route": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PrivateSubnet1RouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": { "Ref": "NatGatewayA" }
      }
    },

    "PrivateSubnet2RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "private-subnet-b-route-table" ] ] } } ]
      }
    },

    "PrivateSubnet2Route": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PrivateSubnet2RouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": { "Ref": "NatGatewayB" }
      }
    },

    "PrivateSubnet3RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "private-subnet-c-route-table" ] ] } } ]
      }
    },

    "PrivateSubnet3Route": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PrivateSubnet3RouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": { "Ref": "NatGatewayC" }
      }
    },



    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Fn::Join": [ ".", [ { "Ref": "CidrBlockPrefix" }, "64/26" ] ] },
        "AvailabilityZone": { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, { "Ref": "ZoneId1" } ] ] },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "private-subnet-a" ] ] } } ]
      }
    },

    "PrivateSubnet1RouteTableAssoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnet1" },
        "RouteTableId": { "Ref": "PrivateSubnet1RouteTable" }
      }
    },

    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Fn::Join": [ ".", [ { "Ref": "CidrBlockPrefix" }, "128/26" ] ] },
        "AvailabilityZone": { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, { "Ref": "ZoneId2" } ] ] },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "private-subnet-b" ] ] } } ]
      }
    },

    "PrivateSubnet2RouteTableAssoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnet2" },
        "RouteTableId": { "Ref": "PrivateSubnet2RouteTable" }
      }
    },

    "PrivateSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Fn::Join": [ ".", [ { "Ref": "CidrBlockPrefix" }, "192/26" ] ] },
        "AvailabilityZone": { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, { "Ref": "ZoneId3" } ] ] },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "private-subnet-c" ] ] } } ]
      }
    },

    "PrivateSubnet3RouteTableAssoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnet3" },
        "RouteTableId": { "Ref": "PrivateSubnet3RouteTable" }
      }
    },



    "S3Endpoint": {
      "Type": "AWS::EC2::VPCEndpoint",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [ { "Action": "*", "Effect": "Allow", "Principal": "*", "Resource": "*" } ]
        },
        "RouteTableIds": [
          { "Ref": "PublicSubnetRouteTable" },
          { "Ref": "PrivateSubnet1RouteTable" },
          { "Ref": "PrivateSubnet2RouteTable" },
          { "Ref": "PrivateSubnet3RouteTable" }
        ],
        "ServiceName": { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".s3" ] ] },
        "VpcId": { "Ref": "Vpc" }
      }
    }

  },

  "Outputs": {

    "VpcId": {
      "Description": "Id for vpc",
      "Value": { "Ref": "Vpc" }
    },

    "PublicSubnet1Id": {
      "Description": "Id for public subnet 1",
      "Value": { "Ref": "PublicSubnet1" }
    },

    "PublicSubnet2Id": {
      "Description": "Id for public subnet 2",
      "Value": { "Ref": "PublicSubnet2" }
    },

    "PublicSubnet3Id": {
      "Description": "Id for public subnet 3",
      "Value": { "Ref": "PublicSubnet3" }
    },

    "PrivateSubnet1Id": {
      "Description": "Id for private subnet 1",
      "Value": { "Ref": "PrivateSubnet1" }
    },

    "PrivateSubnet2Id": {
      "Description": "Id for private subnet 2",
      "Value": { "Ref": "PrivateSubnet2" }
    },

    "PrivateSubnet3Id": {
      "Description": "Id for private subnet 3",
      "Value": { "Ref": "PrivateSubnet3" }
    }

  }

}
