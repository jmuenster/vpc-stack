{

  "Description": "multi-az vpc template w/ 3 /28 public subnets, 3 /26 private subnets",

  "Parameters": {

    "FirstOctet": {
      "Description": "First octet in the cidr block range (x.0.0.0)",
      "Type": "String",
      "Default": "10"
    },

    "SecondOctet": {
      "Description": "Second octet in the cidr block range (0.x.0.0)",
      "Type": "String",
      "Default": "10"
    },

    "ThirdOctet": {
      "Description": "Third octet in the cidr block range (0.0.x.0)",
      "Type": "String",
      "Default": "10"
    }

  },



  "Resources": {

    "Vpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Fn::Join": [ ".", [ { "Ref": "FirstOctet" }, { "Ref": "SecondOctet" }, { "Ref": "ThirdOctet" }, "0/24" ] ] },
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "InstanceTenancy": "default",
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "vpc" ] ] } } ]
      }
    },

    "InternetGateway": { 
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "igw" ] ] } } ]
      }
    },

    "InternetGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },

    "DhcpOptions": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "",
        "DomainNameServers": [ "AmazonProvidedDNS" ],
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "dhcp-options" ] ] } } ]
      }
    },

    "DhcpOptionsAssociation": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "DhcpOptionsId": { "Ref": "DhcpOptions" }
      }
    },



    "PublicSubnetRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "public-subnet-route-table" ] ] } } ]
      }
    },

    "PublicSubnetRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PublicSubnetRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },



    "PublicSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Fn::Join": [ ".", [ { "Ref": "FirstOctet" }, { "Ref": "SecondOctet" }, { "Ref": "ThirdOctet" }, "0/28" ] ] },
        "AvailabilityZone": { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "a" ] ] },
        "MapPublicIpOnLaunch": "true",
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "public-subnet-a" ] ] } } ]
      }
    },

    "PublicSubnetARouteTableAssoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnetA" },
        "RouteTableId": { "Ref": "PublicSubnetRouteTable" }
      }
    },

    "PublicSubnetB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Fn::Join": [ ".", [ { "Ref": "FirstOctet" }, { "Ref": "SecondOctet" }, { "Ref": "ThirdOctet" }, "16/28" ] ] },
        "AvailabilityZone": { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "b" ] ] },
        "MapPublicIpOnLaunch": "true",
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "public-subnet-b" ] ] } } ]
      }
    },

    "PublicSubnetBRouteTableAssoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnetB" },
        "RouteTableId": { "Ref": "PublicSubnetRouteTable" }
      }
    },

    "PublicSubnetC": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Fn::Join": [ ".", [ { "Ref": "FirstOctet" }, { "Ref": "SecondOctet" }, { "Ref": "ThirdOctet" }, "32/28" ] ] },
        "AvailabilityZone": { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "c" ] ] },
        "MapPublicIpOnLaunch": "true",
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "public-subnet-c" ] ] } } ]
      }
    },

    "PublicSubnetCRouteTableAssoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnetC" },
        "RouteTableId": { "Ref": "PublicSubnetRouteTable" }
      }
    },






    "NatGatewayAEip": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },

    "NatGatewayBEip": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },

    "NatGatewayCEip": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },

    "NatGatewayA": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": { "Fn::GetAtt": [ "NatGatewayAEip", "AllocationId" ] },
        "SubnetId": { "Ref": "PublicSubnetA"}
      }
    },

    "NatGatewayB": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": { "Fn::GetAtt": [ "NatGatewayBEip", "AllocationId" ] },
        "SubnetId": { "Ref": "PublicSubnetB"}
      }
    },

    "NatGatewayC": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": { "Fn::GetAtt": [ "NatGatewayCEip", "AllocationId" ] },
        "SubnetId": { "Ref": "PublicSubnetC"}
      }
    },

    "PrivateSubnetARouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "private-subnet-a-route-table" ] ] } } ]
      }
    },

    "PrivateSubnetARoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PrivateSubnetARouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": { "Ref": "NatGatewayA" }
      }
    },

    "PrivateSubnetBRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "private-subnet-b-route-table" ] ] } } ]
      }
    },

    "PrivateSubnetBRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PrivateSubnetBRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": { "Ref": "NatGatewayB" }
      }
    },

    "PrivateSubnetCRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "private-subnet-c-route-table" ] ] } } ]
      }
    },

    "PrivateSubnetCRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PrivateSubnetCRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": { "Ref": "NatGatewayC" }
      }
    },



    "PrivateSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Fn::Join": [ ".", [ { "Ref": "FirstOctet" }, { "Ref": "SecondOctet" }, { "Ref": "ThirdOctet" }, "64/26" ] ] },
        "AvailabilityZone": { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "a" ] ] },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "private-subnet-a" ] ] } } ]
      }
    },

    "PrivateSubnetARouteTableAssoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnetA" },
        "RouteTableId": { "Ref": "PrivateSubnetARouteTable" }
      }
    },

    "PrivateSubnetB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Fn::Join": [ ".", [ { "Ref": "FirstOctet" }, { "Ref": "SecondOctet" }, { "Ref": "ThirdOctet" }, "128/26" ] ] },
        "AvailabilityZone": { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "b" ] ] },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "private-subnet-b" ] ] } } ]
      }
    },

    "PrivateSubnetBRouteTableAssoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnetB" },
        "RouteTableId": { "Ref": "PrivateSubnetBRouteTable" }
      }
    },

    "PrivateSubnetC": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Fn::Join": [ ".", [ { "Ref": "FirstOctet" }, { "Ref": "SecondOctet" }, { "Ref": "ThirdOctet" }, "192/26" ] ] },
        "AvailabilityZone": { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "c" ] ] },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "private-subnet-c" ] ] } } ]
      }
    },

    "PrivateSubnetCRouteTableAssoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnetC" },
        "RouteTableId": { "Ref": "PrivateSubnetCRouteTable" }
      }
    },



    "S3Endpoint": {
      "Type": "AWS::EC2::VPCEndpoint",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [ { "Action": "*", "Effect": "Allow", "Principal": "*", "Resource": "*" } ]
        },
        "RouteTableIds": [
          { "Ref": "PublicSubnetRouteTable" },
          { "Ref": "PrivateSubnetARouteTable" },
          { "Ref": "PrivateSubnetBRouteTable" },
          { "Ref": "PrivateSubnetCRouteTable" }
        ],
        "ServiceName": { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".s3" ] ] },
        "VpcId": { "Ref": "Vpc" }
      }
    }

  },

  "Outputs": {

    "VpcId": {
      "Description": "Id for vpc",
      "Value": { "Ref": "Vpc" }
    },

    "PublicSubnetAId": {
      "Description": "Id for public subnet a",
      "Value": { "Ref": "PublicSubnetA" }
    },

    "PublicSubnetBId": {
      "Description": "Id for public subnet b",
      "Value": { "Ref": "PublicSubnetB" }
    },

    "PublicSubnetCId": {
      "Description": "Id for public subnet c",
      "Value": { "Ref": "PublicSubnetC" }
    },

    "PrivateSubnetAId": {
      "Description": "Id for private subnet a",
      "Value": { "Ref": "PrivateSubnetA" }
    },

    "PrivateSubnetBId": {
      "Description": "Id for private subnet b",
      "Value": { "Ref": "PrivateSubnetB" }
    },

    "PrivateSubnetCId": {
      "Description": "Id for private subnet c",
      "Value": { "Ref": "PrivateSubnetC" }
    }

  }

}
